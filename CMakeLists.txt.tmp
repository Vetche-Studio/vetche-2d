cmake_minimum_required(VERSION 3.5.0)
project(BrainDust-Toolbox VERSION 0.1.0 LANGUAGES C CXX)
set(PROJECT_TARGET_NAME ${PROJECT_NAME})

include_directories(
    ${PROJECT_TARGET_NAME} 
    ./src
    ./vendor/raylib/src)
    
set(SRC_FILES 
    src/bd/bd.cpp
    src/bd/core/core.cpp
    src/bd/layer/layerstack.cpp
    )

if(BRAINDUST_PLATFORM)
    if(${BRAINDUST_PLATFORM} STREQUAL "LINUX_X11")
        include_directories(
            ${PROJECT_TARGET_NAME} 
            ./vendor/raylib/src)
        set(LINUX_X11_SRC_FILES 
            src/bd/platform/linux/rendering/renderer.cpp
        )
        
        set(SRC_FILES ${SRC_FILES} ${LINUX_X11_SRC_FILES})
        
        add_compile_definitions(BUILD_LINUX_X11)
            
        set(RAYLIB_VERSION 5.0)
        add_subdirectory(vendor/raylib)    
    elseif(${BRAINDUST_PLATFORM} STREQUAL "NINTENDO_DS")
        set(CMAKE_TOOLCHAIN_FILE $ENV{DEVKITPRO}/cmake/devkitARM.cmake)
    endif()
    
    # TODO: Make this library dynamic and fix the problem where raylib doesn't work with SHARED
    add_library(${PROJECT_TARGET_NAME} STATIC ${SRC_FILES})
    
    if(${BRAINDUST_PLATFORM} STREQUAL "LINUX_X11")
        target_link_libraries(${PROJECT_TARGET_NAME} raylib)
    endif()
    
    if(${BRAINDUST_PLATFORM} STREQUAL "NINTENDO_DS")
        add_custom_command(TARGET ${PROJECT_TARGET_NAME} POST_BUILD
            COMMAND ${CMAKE_OBJCOPY} -O binary ${PROJECT_TARGET_NAME}.elf ${PROJECT_TARGET_NAME}.nds
            COMMENT "Converting ELF to NDS")
        target_link_libraries(${PROJECT_TARGET_NAME} nds)
        message("Building for Nintendo DS...")
    endif()
endif()